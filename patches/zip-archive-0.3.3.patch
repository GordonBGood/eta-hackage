From a5f1e1de56981655930ff68491f71fba5b4c4f77 Mon Sep 17 00:00:00 2001
From: Jyothsna Srinivas <jyothsnasrinivas17@gmail.com>
Date: Sat, 11 Aug 2018 22:59:59 +0530
Subject: [PATCH] Patched

---
 src/Codec/Archive/Zip.hs | 30 ++++++++++++++++++++++--------
 1 file changed, 22 insertions(+), 8 deletions(-)

diff --git a/src/Codec/Archive/Zip.hs b/src/Codec/Archive/Zip.hs
index 8d71c9a..fbc8987 100644
--- a/src/Codec/Archive/Zip.hs
+++ b/src/Codec/Archive/Zip.hs
@@ -1,6 +1,6 @@
 {-# LANGUAGE CPP #-}
 {-# LANGUAGE DeriveDataTypeable #-}
-{-# LANGUAGE ViewPatterns #-}
+{-# LANGUAGE ViewPatterns, GeneralizedNewtypeDeriving #-}
 ------------------------------------------------------------------------
 -- |
 -- Module      : Codec.Archive.Zip
@@ -90,16 +90,16 @@ import qualified Data.Map as M
 #if MIN_VERSION_binary(0,6,0)
 import Control.Applicative
 #endif
-#ifndef _WINDOWS
-import System.Posix.Files ( setFileTimes, setFileMode, fileMode, getSymbolicLinkStatus, symbolicLinkMode, readSymbolicLink, isSymbolicLink, unionFileModes, createSymbolicLink )
-import System.Posix.Types ( CMode(..) )
-#endif
+-- #ifndef _WINDOWS || !defined(ETA_VERSION)
+-- import System.Posix.Files ( setFileTimes, setFileMode, fileMode, getSymbolicLinkStatus, symbolicLinkMode, readSymbolicLink, isSymbolicLink, unionFileModes, createSymbolicLink )
+-- import System.Posix.Types ( CMode(..) )
+-- #endif
 
 -- from bytestring
 import qualified Data.ByteString as S
 import qualified Data.ByteString.Lazy as B
 import qualified Data.ByteString.Lazy.Char8 as C (pack, unpack)
-
+import Data.Bits
 -- text
 import qualified Data.Text.Lazy as TL
 import qualified Data.Text.Lazy.Encoding as TL
@@ -482,10 +482,10 @@ epochTimeToMSDOSDateTime epochtime | epochtime < minMSDOSDateTime =
   epochTimeToMSDOSDateTime minMSDOSDateTime
   -- if time is earlier than minimum DOS datetime, return minimum
 epochTimeToMSDOSDateTime epochtime =
-  let 
+  let
     UTCTime
       (toGregorian -> (fromInteger -> year, month, day))
-      (timeToTimeOfDay -> (TimeOfDay hour minutes (floor -> sec))) 
+      (timeToTimeOfDay -> (TimeOfDay hour minutes (floor -> sec)))
       = posixSecondsToUTCTime (fromIntegral epochtime)
 
     dosTime = toEnum $ (sec `div` 2) + shiftL minutes 5 + shiftL hour 11
@@ -936,3 +936,17 @@ toString = TL.unpack . TL.decodeUtf8
 
 fromString :: String -> B.ByteString
 fromString = TL.encodeUtf8 . TL.pack
+
+getSymbolicLinkStatus = error "getSymbolicLinkStatus not implemented!"
+isSymbolicLink = error "isSymbolicLink not implemented!"
+readSymbolicLink = error "readSymbolicLink not implemented!"
+unionFileModes = error "unionFileModes not implemented!"
+-- symbolicLinkMode = error "symbolicLinkMode not implemented!"
+fileMode = error "fileMode not implemented!"
+setFileMode = error "setFileMode not implemented!"
+createSymbolicLink = error "createSymbolicLink not implemented!"
+symbolicLinkMode = error "symbolicLinkMode not implemented!"
+newtype CMode = CMode Int
+   deriving (Eq, Bits)
+-- isSymbolicLink = error "isSymbolicLink not implemented!"
+setFileTimes = error "setFileTimes not implemented!"
-- 
2.15.2 (Apple Git-101.1)

