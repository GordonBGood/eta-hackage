From 65ae2042d537d8da12dcb5c38f73c3509e556dc9 Mon Sep 17 00:00:00 2001
From: Jyothsna Srinivas <jyothsnasrinivas17@gmail.com>
Date: Sat, 11 Aug 2018 23:30:19 +0530
Subject: [PATCH] Patched

---
 src/Codec/Archive/Zip.hs | 24 +++++++++++++++++-------
 zip-archive.cabal        | 18 +++++++++---------
 2 files changed, 26 insertions(+), 16 deletions(-)

diff --git a/src/Codec/Archive/Zip.hs b/src/Codec/Archive/Zip.hs
index 8d71c9a..cdbe9a8 100644
--- a/src/Codec/Archive/Zip.hs
+++ b/src/Codec/Archive/Zip.hs
@@ -1,6 +1,6 @@
 {-# LANGUAGE CPP #-}
 {-# LANGUAGE DeriveDataTypeable #-}
-{-# LANGUAGE ViewPatterns #-}
+{-# LANGUAGE ViewPatterns, GeneralizedNewtypeDeriving  #-}
 ------------------------------------------------------------------------
 -- |
 -- Module      : Codec.Archive.Zip
@@ -90,15 +90,12 @@ import qualified Data.Map as M
 #if MIN_VERSION_binary(0,6,0)
 import Control.Applicative
 #endif
-#ifndef _WINDOWS
-import System.Posix.Files ( setFileTimes, setFileMode, fileMode, getSymbolicLinkStatus, symbolicLinkMode, readSymbolicLink, isSymbolicLink, unionFileModes, createSymbolicLink )
-import System.Posix.Types ( CMode(..) )
-#endif
 
 -- from bytestring
 import qualified Data.ByteString as S
 import qualified Data.ByteString.Lazy as B
 import qualified Data.ByteString.Lazy.Char8 as C (pack, unpack)
+import Data.Bits
 
 -- text
 import qualified Data.Text.Lazy as TL
@@ -482,10 +479,10 @@ epochTimeToMSDOSDateTime epochtime | epochtime < minMSDOSDateTime =
   epochTimeToMSDOSDateTime minMSDOSDateTime
   -- if time is earlier than minimum DOS datetime, return minimum
 epochTimeToMSDOSDateTime epochtime =
-  let 
+  let
     UTCTime
       (toGregorian -> (fromInteger -> year, month, day))
-      (timeToTimeOfDay -> (TimeOfDay hour minutes (floor -> sec))) 
+      (timeToTimeOfDay -> (TimeOfDay hour minutes (floor -> sec)))
       = posixSecondsToUTCTime (fromIntegral epochtime)
 
     dosTime = toEnum $ (sec `div` 2) + shiftL minutes 5 + shiftL hour 11
@@ -936,3 +933,16 @@ toString = TL.unpack . TL.decodeUtf8
 
 fromString :: String -> B.ByteString
 fromString = TL.encodeUtf8 . TL.pack
+
+getSymbolicLinkStatus = error "getSymbolicLinkStatus not implemented!"
+isSymbolicLink = error "isSymbolicLink not implemented!"
+readSymbolicLink = error "readSymbolicLink not implemented!"
+unionFileModes = error "unionFileModes not implemented!"
+fileMode = error "fileMode not implemented!"
+setFileMode = error "setFileMode not implemented!"
+createSymbolicLink = error "createSymbolicLink not implemented!"
+symbolicLinkMode = error "symbolicLinkMode not implemented!"
+setFileTimes = error "setFileTimes not implemented!"
+
+newtype CMode = CMode Int
+   deriving (Eq, Bits)
diff --git a/zip-archive.cabal b/zip-archive.cabal
index 8293feb..1ca4ae6 100644
--- a/zip-archive.cabal
+++ b/zip-archive.cabal
@@ -46,10 +46,10 @@ Library
   Default-Language:  Haskell98
   Hs-Source-Dirs:    src
   Ghc-Options:       -Wall
-  if os(windows)
-    cpp-options:     -D_WINDOWS
-  else
-    Build-depends:   unix
+  -- if os(windows)
+  --   cpp-options:     -D_WINDOWS
+  -- else
+  --   Build-depends:   unix
 
 custom-setup
   setup-depends: base, Cabal
@@ -78,8 +78,8 @@ Test-Suite test-zip-archive
                   HUnit, zip-archive, temporary, filepath
   Default-Language:  Haskell98
   Ghc-Options:    -Wall
-  if os(windows)
-    cpp-options:     -D_WINDOWS
-  else
-    Build-tools:     unzip
-    Build-depends:   unix
+  -- if os(windows)
+  --   cpp-options:     -D_WINDOWS
+  -- else
+  --   Build-tools:     unzip
+  --   Build-depends:   unix
-- 
2.15.2 (Apple Git-101.1)

