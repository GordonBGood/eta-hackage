From eb31e91929b9a00b43cb6817587f959f0388f519 Mon Sep 17 00:00:00 2001
From: Rahul Muttineni <rahulmutt@gmail.com>
Date: Fri, 6 Apr 2018 12:11:29 +0530
Subject: [PATCH] Patched

---
 shake.cabal                               | 12 +----------
 src/Development/Shake/Internal/Profile.hs | 18 ++++++++---------
 src/General/FileLock.hs                   | 33 ++++++++++++++++---------------
 3 files changed, 27 insertions(+), 36 deletions(-)

diff --git a/shake.cabal b/shake.cabal
index f97578a..777d38b 100644
--- a/shake.cabal
+++ b/shake.cabal
@@ -68,7 +68,7 @@ source-repository head
     location: https://github.com/ndmitchell/shake.git
 
 flag portable
-    default: False
+    default: True
     manual: True
     description: Obtain FileTime using portable functions
 
@@ -98,11 +98,6 @@ library
         cpp-options: -DPORTABLE
         if impl(ghc < 7.6)
             build-depends: old-time
-    else
-        if !os(windows)
-            build-depends: unix >= 2.5.1
-    if !os(windows)
-        build-depends: unix
 
     if impl(ghc < 8.0)
         build-depends: semigroups >= 0.18
@@ -203,11 +198,6 @@ executable shake
         cpp-options: -DPORTABLE
         if impl(ghc < 7.6)
             build-depends: old-time
-    else
-        if !os(windows)
-            build-depends: unix >= 2.5.1
-    if !os(windows)
-        build-depends: unix
 
     if impl(ghc < 8.0)
         build-depends: semigroups >= 0.18
diff --git a/src/Development/Shake/Internal/Profile.hs b/src/Development/Shake/Internal/Profile.hs
index 8945ec2..2b8fd1a 100644
--- a/src/Development/Shake/Internal/Profile.hs
+++ b/src/Development/Shake/Internal/Profile.hs
@@ -23,15 +23,15 @@ prfTime ProfileTrace{..} = prfStop - prfStart
 
 -- | Generates an report given some build system profiling data.
 writeProfile :: FilePath -> [ProfileEntry] -> IO ()
-writeProfile out xs
-    | takeExtension out == ".js" = writeFile out $ "var shake = \n" ++ generateJSON xs
-    | takeExtension out == ".json" = writeFile out $ generateJSON xs
-    | takeExtension out == ".trace" = writeFile out $ generateTrace xs
-    | out == "-" = putStr $ unlines $ generateSummary xs
-    -- NOTE: On my laptop writing 1.5Mb of profile report takes 0.6s.
-    --       This is fundamentals of my laptop, not a Haskell profiling issue.
-    --       Verified with similar "type foo > bar" commands taking similar time.
-    | otherwise = LBS.writeFile out =<< generateHTML xs
+writeProfile _out _xs = return ()
+    -- | takeExtension out == ".js" = writeFile out $ "var shake = \n" ++ generateJSON xs
+    -- | takeExtension out == ".json" = writeFile out $ generateJSON xs
+    -- | takeExtension out == ".trace" = writeFile out $ generateTrace xs
+    -- | out == "-" = putStr $ unlines $ generateSummary xs
+    -- -- NOTE: On my laptop writing 1.5Mb of profile report takes 0.6s.
+    -- --       This is fundamentals of my laptop, not a Haskell profiling issue.
+    -- --       Verified with similar "type foo > bar" commands taking similar time.
+    -- | otherwise = LBS.writeFile out =<< generateHTML xs
 
 
 generateSummary :: [ProfileEntry] -> [String]
diff --git a/src/General/FileLock.hs b/src/General/FileLock.hs
index 407a505..3965be9 100644
--- a/src/General/FileLock.hs
+++ b/src/General/FileLock.hs
@@ -13,7 +13,7 @@ import Foreign.C.Types
 import Foreign.C.String
 #else
 import System.IO
-import System.Posix.IO
+-- import System.Posix.IO
 #endif
 
 #ifdef mingw32_HOST_OS
@@ -56,21 +56,22 @@ withLockFile file act = withCWString file $ \cfile -> do
 
 #else
 
-withLockFile file act = do
-    createDirectoryRecursive $ takeDirectory file
-    tryIO $ writeFile file ""
+withLockFile _file act = act
+    -- TODO: Implement file locking
+    -- createDirectoryRecursive $ takeDirectory file
+    -- tryIO $ writeFile file ""
 
-    bracket (openFd file ReadWrite Nothing defaultFileFlags) closeFd $ \fd -> do
-        let lock = (WriteLock, AbsoluteSeek, 0, 0)
-        res <- tryIO $ setLock fd lock
-        case res of
-            Right () -> act
-            Left e -> do
-                res <- getLock fd lock
-                errorIO $ "Shake failed to acquire a file lock on " ++ file ++ "\n" ++
-                          (case res of
-                               Nothing -> ""
-                               Just (pid, _) -> "Shake process ID " ++ show pid ++ " is using this lock.\n") ++
-                          show e
+    -- bracket (openFd file ReadWrite Nothing defaultFileFlags) closeFd $ \fd -> do
+    --     let lock = (WriteLock, AbsoluteSeek, 0, 0)
+    --     res <- tryIO $ setLock fd lock
+    --     case res of
+    --         Right () -> act
+    --         Left e -> do
+    --             res <- getLock fd lock
+    --             errorIO $ "Shake failed to acquire a file lock on " ++ file ++ "\n" ++
+    --                       (case res of
+    --                            Nothing -> ""
+    --                            Just (pid, _) -> "Shake process ID " ++ show pid ++ " is using this lock.\n") ++
+    --                       show e
 
 #endif
-- 
2.7.4 (Apple Git-66)

