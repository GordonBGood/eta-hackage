From f659dab06fb0cd854cbb3f25b5b7327a29f90fe0 Mon Sep 17 00:00:00 2001
From: Jyothsna Srinivas <jyothsnasrinivas17@gmail.com>
Date: Sat, 11 Aug 2018 12:25:39 +0530
Subject: [PATCH] Patched

---
 Test/Tasty/CmdLine.hs                         |  1 -
 Test/Tasty/Ingredients/ConsoleReporter.hs     |  2 +-
 Test/Tasty/Ingredients/ConsoleReporter.hs.rej | 34 +++++++++++++++++++++++++++
 Test/Tasty/Options.hs                         |  2 +-
 Test/Tasty/Runners/Reducers.hs                |  2 +-
 Test/Tasty/Runners/Reducers.hs.rej            | 20 ++++++++++++++++
 tasty.cabal                                   |  9 ++-----
 7 files changed, 59 insertions(+), 11 deletions(-)
 create mode 100644 Test/Tasty/Ingredients/ConsoleReporter.hs.rej
 create mode 100644 Test/Tasty/Runners/Reducers.hs.rej

diff --git a/Test/Tasty/CmdLine.hs b/Test/Tasty/CmdLine.hs
index c91269b..ecbf000 100644
--- a/Test/Tasty/CmdLine.hs
+++ b/Test/Tasty/CmdLine.hs
@@ -19,7 +19,6 @@ import System.IO
 -- GHC 7.4 lacks mkWeakThreadId (see #181), and this is not important
 -- enough to look for an alternative implementation, so we just disable it
 -- there.
-#define INSTALL_HANDLERS defined UNIX && MIN_VERSION_base(4,6,0)
 
 #if INSTALL_HANDLERS
 import Control.Concurrent (mkWeakThreadId, myThreadId)
diff --git a/Test/Tasty/Ingredients/ConsoleReporter.hs b/Test/Tasty/Ingredients/ConsoleReporter.hs
index 90cedc2..7a8b85b 100644
--- a/Test/Tasty/Ingredients/ConsoleReporter.hs
+++ b/Test/Tasty/Ingredients/ConsoleReporter.hs
@@ -1,5 +1,5 @@
 -- vim:fdm=marker:foldtext=foldtext()
-{-# LANGUAGE BangPatterns, ImplicitParams, MultiParamTypeClasses, DeriveDataTypeable, FlexibleContexts #-}
+{-# LANGUAGE BangPatterns, ImplicitParams, MultiParamTypeClasses, DeriveDataTypeable, FlexibleContexts, CPP #-}
 -- | Console reporter ingredient
 module Test.Tasty.Ingredients.ConsoleReporter
   ( consoleTestReporter
diff --git a/Test/Tasty/Ingredients/ConsoleReporter.hs.rej b/Test/Tasty/Ingredients/ConsoleReporter.hs.rej
new file mode 100644
index 0000000..b163ffa
--- /dev/null
+++ b/Test/Tasty/Ingredients/ConsoleReporter.hs.rej
@@ -0,0 +1,34 @@
+diff a/Test/Tasty/Ingredients/ConsoleReporter.hs b/Test/Tasty/Ingredients/ConsoleReporter.hs	(rejected hunks)
+@@ -53,6 +53,10 @@ data TestOutput
+ instance Monoid TestOutput where
+   mempty = Skip
+   mappend = Seq
++#if MIN_VERSION_base(4,10,0)
++instance Semigroup TestOutput where
++  (<>) = mappend
++#endif
+ 
+ type Level = Int
+ 
+@@ -225,6 +229,10 @@ data Statistics = Statistics
+ instance Monoid Statistics where
+   Statistics t1 f1 `mappend` Statistics t2 f2 = Statistics (t1 + t2) (f1 + f2)
+   mempty = Statistics 0 0
++#if MIN_VERSION_base(4,10,0)
++instance Semigroup Statistics where
++  (<>) = mappend
++#endif
+ 
+ computeStatistics :: StatusMap -> IO Statistics
+ computeStatistics = getApp . foldMap (\var -> Ap $
+@@ -458,6 +466,10 @@ instance Ord a => Monoid (Maximum a) where
+   Maximum a `mappend` Maximum b = Maximum (a `max` b)
+   MinusInfinity `mappend` a = a
+   a `mappend` MinusInfinity = a
++#if MIN_VERSION_base(4,10,0)
++instance Ord a => Semigroup (Maximum a) where
++  (<>) = mappend
++#endif
+ 
+ -- | Compute the amount of space needed to align "OK"s and "FAIL"s
+ computeAlignment :: OptionSet -> TestTree -> Int
diff --git a/Test/Tasty/Options.hs b/Test/Tasty/Options.hs
index 72e73eb..2a829a5 100644
--- a/Test/Tasty/Options.hs
+++ b/Test/Tasty/Options.hs
@@ -1,7 +1,7 @@
 {-# LANGUAGE ScopedTypeVariables, DeriveDataTypeable,
              ExistentialQuantification, GADTs,
              FlexibleInstances, UndecidableInstances,
-             TypeOperators #-}
+             TypeOperators, CPP #-}
 -- | Extensible options. They are used for provider-specific settings,
 -- ingredient-specific settings and core settings (such as the test name pattern).
 module Test.Tasty.Options
diff --git a/Test/Tasty/Runners/Reducers.hs b/Test/Tasty/Runners/Reducers.hs
index dd3a301..8562690 100644
--- a/Test/Tasty/Runners/Reducers.hs
+++ b/Test/Tasty/Runners/Reducers.hs
@@ -37,7 +37,7 @@ ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 POSSIBILITY OF SUCH DAMAGE.
 -}
 
-{-# LANGUAGE GeneralizedNewtypeDeriving #-}
+{-# LANGUAGE GeneralizedNewtypeDeriving, CPP #-}
 
 module Test.Tasty.Runners.Reducers where
 
diff --git a/Test/Tasty/Runners/Reducers.hs.rej b/Test/Tasty/Runners/Reducers.hs.rej
new file mode 100644
index 0000000..01a4dc2
--- /dev/null
+++ b/Test/Tasty/Runners/Reducers.hs.rej
@@ -0,0 +1,20 @@
+diff a/Test/Tasty/Runners/Reducers.hs b/Test/Tasty/Runners/Reducers.hs	(rejected hunks)
+@@ -50,6 +50,10 @@ newtype Traversal f = Traversal { getTraversal :: f () }
+ instance Applicative f => Monoid (Traversal f) where
+   mempty = Traversal $ pure ()
+   Traversal f1 `mappend` Traversal f2 = Traversal $ f1 *> f2
++#if MIN_VERSION_base(4,9,0)
++instance Applicative f => Semigroup (Traversal f) where
++  (<>) = mappend
++#endif
+ 
+ -- | Monoid generated by @'liftA2' ('<>')@
+ newtype Ap f a = Ap { getApp :: f a }
+@@ -57,3 +61,7 @@ newtype Ap f a = Ap { getApp :: f a }
+ instance (Applicative f, Monoid a) => Monoid (Ap f a) where
+   mempty = pure mempty
+   mappend = liftA2 mappend
++#if MIN_VERSION_base(4,9,0)
++instance (Applicative f, Monoid a) => Semigroup (Ap f a) where
++  (<>) = mappend
++#endif
diff --git a/tasty.cabal b/tasty.cabal
index 3db8dcf..e3f601d 100644
--- a/tasty.cabal
+++ b/tasty.cabal
@@ -14,7 +14,7 @@ author:              Roman Cheplyaka <roma@ro-che.info>
 maintainer:          Roman Cheplyaka <roma@ro-che.info>
 homepage:            https://github.com/feuerbach/tasty
 bug-reports:         https://github.com/feuerbach/tasty/issues
--- copyright:           
+-- copyright:
 category:            Testing
 build-type:          Simple
 extra-source-files:  CHANGELOG.md, README.md
@@ -77,12 +77,7 @@ library
     -- for GHC.Generics
     build-depends: ghc-prim
 
-  if !os(windows)
-    build-depends: unix,
-                   wcwidth
-    cpp-options: -DUNIX
-
-  -- hs-source-dirs:      
+  -- hs-source-dirs:
   default-language:    Haskell2010
   default-extensions:  CPP
   ghc-options: -Wall
-- 
2.15.2 (Apple Git-101.1)

