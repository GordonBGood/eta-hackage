From 02c18e3db0e5b2ce5ee132f4c8e770f007bcd0f7 Mon Sep 17 00:00:00 2001
From: Denys Dushyn <Denys.Dushyn@dataart.com>
Date: Wed, 10 Jan 2018 09:55:46 +0100
Subject: [PATCH] Patched

---
 temporary-1.2.1.1/System/IO/Temp.hs |  9 ---------
 temporary-1.2.1.1/temporary.cabal   |  7 +------
 temporary-1.2.1.1/tests/test.hs     | 18 ------------------
 3 files changed, 1 insertion(+), 33 deletions(-)

diff --git a/temporary-1.2.1.1/System/IO/Temp.hs b/temporary-1.2.1.1/System/IO/Temp.hs
index 9abbb99..e85da9f 100644
--- a/temporary-1.2.1.1/System/IO/Temp.hs
+++ b/temporary-1.2.1.1/System/IO/Temp.hs
@@ -49,11 +49,6 @@ import System.IO (Handle, hClose, openTempFile, openBinaryTempFile,
 import System.IO.Error        (isAlreadyExistsError)
 import System.Posix.Internals (c_getpid)
 import System.FilePath        ((</>))
-#ifdef mingw32_HOST_OS
-import System.Directory       ( createDirectory )
-#else
-import qualified System.Posix
-#endif
 
 -- | Create, open, and use a temporary file in the system standard temporary directory.
 --
@@ -177,11 +172,7 @@ createTempDirectory dir template = do
                 | otherwise              -> ioError e
 
 mkPrivateDir :: String -> IO ()
-#ifdef mingw32_HOST_OS
 mkPrivateDir s = createDirectory s
-#else
-mkPrivateDir s = System.Posix.createDirectory s 0o700
-#endif
 
 -- | Return the absolute and canonical path to the system temporary
 -- directory.
diff --git a/temporary-1.2.1.1/temporary.cabal b/temporary-1.2.1.1/temporary.cabal
index aa18a23..4cdbaa4 100644
--- a/temporary-1.2.1.1/temporary.cabal
+++ b/temporary-1.2.1.1/temporary.cabal
@@ -24,9 +24,6 @@ Library
                      -- note: the transformers dependency is needed for MonadIO
                      -- on older GHCs; on newer ones, it is included in base.
     ghc-options:     -Wall
-    
-    if !os(windows)
-        build-depends: unix >= 2.3
 
 test-suite test
   default-language:
@@ -45,6 +42,4 @@ test-suite test
     , tasty-hunit
     , temporary
     , filepath
-    , base-compat
-  if !os(windows)
-      build-depends: unix >= 2.3
+    , base-compat
\ No newline at end of file
diff --git a/temporary-1.2.1.1/tests/test.hs b/temporary-1.2.1.1/tests/test.hs
index 21bcd29..4ee2a64 100644
--- a/temporary-1.2.1.1/tests/test.hs
+++ b/temporary-1.2.1.1/tests/test.hs
@@ -13,9 +13,6 @@ import System.Environment.Compat
 import Data.Bits
 import Data.List
 import GHC.IO.Handle
-#ifndef mingw32_HOST_OS
-import System.Posix.Files
-#endif
 
 import System.IO.Temp
 
@@ -23,9 +20,6 @@ main = do
   -- force single-thread execution, because changing TMPDIR in one of the
   -- tests may leak to the other tests
   setEnv "TASTY_NUM_THREADS" "1"
-#ifndef mingw32_HOST_OS
-  setFileCreationMask 0
-#endif
   sys_tmp_dir <- getCanonicalTemporaryDirectory
 
   defaultMain $ testGroup "Tests"
@@ -38,10 +32,6 @@ main = do
           takeDirectory fp `equalFilePath` sys_tmp_dir
         hClose fh
         assertBool "File does not exist" =<< doesFileExist fp
-#ifndef mingw32_HOST_OS
-        status <- getFileStatus fp
-        fileMode status .&. 0o777  @?= 0o666 
-#endif
         removeFile fp
     , testCase "withSystemTempFile" $ do
         (fp, fh) <- withSystemTempFile "test.txt" $ \fp fh -> do
@@ -53,10 +43,6 @@ main = do
           assertBool "File not open" =<< hIsOpen fh
           hPutStrLn  fh "hi"
           assertBool "File does not exist" =<< doesFileExist fp
-#ifndef mingw32_HOST_OS
-          status <- getFileStatus fp
-          fileMode status .&. 0o777  @?= 0o600
-#endif
           return (fp, fh)
         assertBool "File still exists" . not =<< doesFileExist fp
         assertBool "File not closed" =<< hIsClosed fh
@@ -68,10 +54,6 @@ main = do
           assertBool (fp ++ " is not in the right directory " ++ sys_tmp_dir) $
             takeDirectory fp `equalFilePath` sys_tmp_dir
           assertBool "Directory does not exist" =<< doesDirectoryExist fp
-#ifndef mingw32_HOST_OS
-          status <- getFileStatus fp
-          fileMode status .&. 0o777  @?= 0o700
-#endif
           return fp
         assertBool "Directory still exists" . not =<< doesDirectoryExist fp
     , testCase "writeSystemTempFile" $ do
-- 
2.14.1.windows.1

