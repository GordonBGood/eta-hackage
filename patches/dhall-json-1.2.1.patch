From c22aa14c224bf3ccef6fa70d774ec4c03c2efbf4 Mon Sep 17 00:00:00 2001
From: Jyothsna Srinivas <jyothsnasrinivas17@gmail.com>
Date: Sun, 22 Jul 2018 16:32:46 +0530
Subject: [PATCH] Patched

---
 dhall-json.cabal      | 10 ++++++++--
 dhall-to-yaml/Main.hs | 17 +++++++++++------
 java/Utils.java       | 17 +++++++++++++++++
 3 files changed, 36 insertions(+), 8 deletions(-)
 create mode 100644 java/Utils.java

diff --git a/dhall-json.cabal b/dhall-json.cabal
index f16d238..aa4d5e1 100644
--- a/dhall-json.cabal
+++ b/dhall-json.cabal
@@ -31,7 +31,7 @@ Library
     Build-Depends:
         base                      >= 4.8.0.0  && < 5   ,
         aeson                     >= 1.0.0.0  && < 1.5 ,
-        dhall                     >= 1.15.0   && < 1.16,
+        dhall                     >= 1.15.0   && < 1.17,
         insert-ordered-containers                < 1.14,
         optparse-applicative      >= 0.14.0.0 && < 0.15,
         text                      >= 0.11.1.0 && < 1.3 ,
@@ -58,10 +58,16 @@ Executable dhall-to-yaml
     Main-Is: Main.hs
     Build-Depends:
         base                                  ,
+        aeson                                 ,
         bytestring                      < 0.11,
         dhall                                 ,
         dhall-json                            ,
         optparse-applicative                  ,
-        yaml             >= 0.5.0    && < 0.9 ,
+        utf8-string      >= 1.0      && <= 1.1,
+        -- yaml             >= 0.5.0    && < 0.9 ,
         text
     GHC-Options: -Wall
+    Maven-Depends: com.fasterxml.jackson.core:jackson-core:2.9.6,
+                   com.fasterxml.jackson.core:jackson-databind:2.9.6,
+                   com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6
+    Java-Sources: java/Utils.java
diff --git a/dhall-to-yaml/Main.hs b/dhall-to-yaml/Main.hs
index 56b7485..c9483fa 100644
--- a/dhall-to-yaml/Main.hs
+++ b/dhall-to-yaml/Main.hs
@@ -1,6 +1,7 @@
-{-# LANGUAGE ApplicativeDo     #-}
-{-# LANGUAGE OverloadedStrings #-}
-{-# LANGUAGE RecordWildCards   #-}
+{-# LANGUAGE ApplicativeDo            #-}
+{-# LANGUAGE OverloadedStrings        #-}
+{-# LANGUAGE RecordWildCards          #-}
+{-# LANGUAGE ForeignFunctionInterface #-}
 
 module Main where
 
@@ -10,9 +11,10 @@ import Dhall.JSON (Conversion)
 import Options.Applicative (Parser, ParserInfo)
 
 import qualified Control.Exception
-import qualified Data.ByteString
+import qualified Data.Aeson
+import qualified Data.ByteString.Lazy.UTF8
 import qualified Data.Text.IO
-import qualified Data.Yaml
+-- import qualified Data.Yaml
 import qualified Dhall
 import qualified Dhall.JSON
 import qualified GHC.IO.Encoding
@@ -53,6 +55,9 @@ parserInfo =
         <>  Options.Applicative.progDesc "Compile Dhall to YAML"
         )
 
+foreign import java unsafe "@static Utils.jsonToYaml" jsonToYaml
+  :: String -> String
+
 main :: IO ()
 main = do
     GHC.IO.Encoding.setLocaleEncoding GHC.IO.Encoding.utf8
@@ -68,7 +73,7 @@ main = do
 
         json <- omittingNull <$> explaining (Dhall.JSON.codeToValue conversion "(stdin)" stdin)
 
-        Data.ByteString.putStr $ Data.Yaml.encode json 
+        putStr $ jsonToYaml $ Data.ByteString.Lazy.UTF8.toString $ Data.Aeson.encode json 
 
 handle :: IO a -> IO a
 handle = Control.Exception.handle handler
diff --git a/java/Utils.java b/java/Utils.java
new file mode 100644
index 0000000..6f8c233
--- /dev/null
+++ b/java/Utils.java
@@ -0,0 +1,17 @@
+import java.io.IOException;
+
+import com.fasterxml.jackson.core.JsonProcessingException;
+import com.fasterxml.jackson.databind.JsonNode;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.fasterxml.jackson.dataformat.yaml.YAMLMapper;
+
+public class Utils {
+
+    public static String jsonToYaml (String jsonString) throws
+        JsonProcessingException, IOException {
+        JsonNode jsonNodeTree = new ObjectMapper().readTree(jsonString);
+        String jsonAsYaml = new YAMLMapper().writeValueAsString(jsonNodeTree);
+        return jsonAsYaml;
+    }
+    
+}
-- 
2.15.2 (Apple Git-101.1)

