From e6020743df62318bc8733152629814b01820d958 Mon Sep 17 00:00:00 2001
From: jneira <atreyu.bbb@gmail.com>
Date: Mon, 19 Mar 2018 23:43:13 +0100
Subject: [PATCH] Patched: java ffi incomplete

---
 Data/Double/Conversion/FFI.hs | 24 ++++++++++++------------
 double-conversion.cabal       | 20 ++++++++++----------
 2 files changed, 22 insertions(+), 22 deletions(-)

diff --git a/Data/Double/Conversion/FFI.hs b/Data/Double/Conversion/FFI.hs
index 853c0c3..4ed3dc7 100644
--- a/Data/Double/Conversion/FFI.hs
+++ b/Data/Double/Conversion/FFI.hs
@@ -37,38 +37,38 @@ import Foreign.C.Types (CDouble, CInt)
 import Foreign.Ptr (Ptr)
 import GHC.Prim (MutableByteArray#)
 
-foreign import ccall unsafe "hs-double-conversion.h _hs_ToShortestLength"
+foreign import java unsafe "@static Utils.toShortestLength"
     c_ToShortestLength :: CInt
 
-foreign import ccall unsafe "hs-double-conversion.h _hs_Text_ToShortest"
+foreign import java unsafe "@static Utils.textToShortest"
     c_Text_ToShortest :: CDouble -> MutableByteArray# s -> IO CInt
 
-foreign import ccall unsafe "hs-double-conversion.h _hs_ToShortest"
+foreign import java unsafe "@static Utils.toShortest"
     c_ToShortest :: CDouble -> Ptr Word8 -> IO CInt
 
-foreign import ccall unsafe "hs-double-conversion.h _hs_ToFixedLength"
+foreign import java unsafe "@static Utils.toFixedLength"
     c_ToFixedLength :: CInt
 
-foreign import ccall unsafe "hs-double-conversion.h _hs_Text_ToFixed"
+foreign import java unsafe "@static Utils.textToFixed"
     c_Text_ToFixed :: CDouble -> MutableByteArray# s -> CInt -> IO CInt
 
-foreign import ccall unsafe "hs-double-conversion.h _hs_ToFixed"
+foreign import java unsafe "@static Utils.toFixed"
     c_ToFixed :: CDouble -> Ptr Word8 -> CInt -> IO CInt
 
-foreign import ccall unsafe "hs-double-conversion.h _hs_ToExponentialLength"
+foreign import java unsafe "@static Utils.toExponentialLength"
     c_ToExponentialLength :: CInt
 
-foreign import ccall unsafe "hs-double-conversion.h _hs_Text_ToExponential"
+foreign import java unsafe "@static Utils.toExponential"
     c_Text_ToExponential :: CDouble -> MutableByteArray# s -> CInt -> IO CInt
 
-foreign import ccall unsafe "hs-double-conversion.h _hs_ToExponential"
+foreign import java unsafe "@static Utils.toExponential"
     c_ToExponential :: CDouble -> Ptr Word8 -> CInt -> IO CInt
 
-foreign import ccall unsafe "hs-double-conversion.h _hs_ToPrecisionLength"
+foreign import java unsafe "@static Utils.toPrecisionLength"
     c_ToPrecisionLength :: CInt
 
-foreign import ccall unsafe "hs-double-conversion.h _hs_Text_ToPrecision"
+foreign import java unsafe "@static Utils.textToPrecision"
     c_Text_ToPrecision :: CDouble -> MutableByteArray# s -> CInt -> IO CInt
 
-foreign import ccall unsafe "hs-double-conversion.h _hs_ToPrecision"
+foreign import java unsafe "@static Utils.toPrecision"
     c_ToPrecision :: CDouble -> Ptr Word8 -> CInt -> IO CInt
diff --git a/double-conversion.cabal b/double-conversion.cabal
index 96114ee..4cee0dd 100644
--- a/double-conversion.cabal
+++ b/double-conversion.cabal
@@ -71,16 +71,16 @@ library
     double-conversion/src/fixed-dtoa.cc
     double-conversion/src/strtod.cc
 
-  if os(windows)
-    if arch(x86_64)
-      extra-libraries: stdc++-6 gcc_s_seh-1
-    else
-      extra-libraries: stdc++-6 gcc_s_dw2-1
-  else
-    if os(darwin)
-      extra-libraries: c++
-    else
-      extra-libraries: stdc++
+--  if os(windows)
+--    if arch(x86_64)
+--      extra-libraries: stdc++-6 gcc_s_seh-1
+--    else
+--      extra-libraries: stdc++-6 gcc_s_dw2-1
+--  else
+--    if os(darwin)
+--      extra-libraries: c++
+--    else
+--      extra-libraries: stdc++
 
   include-dirs:
     double-conversion/src
-- 
2.16.2.windows.1

